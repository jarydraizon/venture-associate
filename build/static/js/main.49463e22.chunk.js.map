{"version":3,"sources":["context/AuthContext.js","components/Navbar.js","components/AuthForm.js","components/VentureList.js","pages/VenturesPage.js","pages/InsightsPage.js","pages/HomePage.js","components/VentureFileManager.js","pages/VenturePage.js","App.js","index.js"],"names":["AuthContext","createContext","AuthProvider","_ref","children","user","setUser","useState","initialUser","localStorage","getItem","email","console","log","error","setError","React","createElement","Provider","value","login","async","response","fetch","method","headers","body","JSON","stringify","credentials","data","json","ok","Error","token","_data$user","userObj","user_id","setItem","err","message","signup","logout","removeItem","useAuth","useContext","Navbar","navigate","useNavigate","location","useLocation","className","concat","pathname","onClick","Fragment","AuthForm","onSubmit","isLogin","setEmail","password","setPassword","e","preventDefault","type","onChange","target","placeholder","required","VentureList","ventures","setVentures","useEffect","venturesRes","axios","get","_error$response","_error$response$data","fetchData","map","venture","key","venture_id","name","description","Date","created_at","toLocaleDateString","active","VenturesPage","InsightsPage","HomePage","VentureFileManager","ventureName","files","setFiles","urls","setUrls","newUrl","setNewUrl","uploading","setUploading","setMessage","details","setDetails","company_name","industry","country_of_operation","list_of_competitors","competitors","setCompetitors","loadData","filesRes","urlsRes","detailsRes","join","updatedDetails","_objectSpread","split","comp","trim","post","_error$response2","_error$response2$data","startsWith","updatedUrls","_error$response3","_error$response3$data","length","url","index","href","rel","id","formData","FormData","i","append","_error$response4","_error$response4$data","multiple","disabled","htmlFor","file","path","download","uploadDate","VenturePage","useParams","sources","setSources","chatMessages","setChatMessages","text","sender","chatInput","setChatInput","activeTab","setActiveTab","agentActions","label","prev","msg","userMessage","isLoading","_chatMessages","includes","filter","analysis","action","PrivateRoute","Navigate","to","AppContent","setIsLogin","Routes","Route","element","App","Router","container","document","getElementById","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.49463e22.chunk.js","sourcesContent":["\nimport React, { createContext, useState, useContext } from 'react';\n\nconst AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n  // Initialize user state from localStorage if token exists\n  const [user, setUser] = useState(() => {\n    const token = localStorage.getItem('token');\n    const initialUser = token ? { email: localStorage.getItem('userEmail') } : null;\n    console.log('Initial user state:', initialUser);\n    return initialUser;\n  });\n  const [error, setError] = useState(null);\n\n  // Login handler - authenticates user and stores token\n  const login = async (credentials) => {\n    try {\n      // Make API request to login endpoint\n      const response = await fetch('/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(credentials)\n      });\n\n      const data = await response.json();\n      \n      // Handle unsuccessful login\n      if (!response.ok) {\n        throw new Error(data.error || 'Login failed');\n      }\n\n      // Only set user state if we received a valid token\n      if (data.token) {\n        const userObj = {\n          email: credentials.email,\n          user_id: data.user_id || data.user?.user_id\n        };\n        \n        // Store auth data in localStorage and state\n        localStorage.setItem('token', data.token);\n        localStorage.setItem('userEmail', credentials.email);\n        setUser(userObj);\n      } else {\n        throw new Error('Invalid login response');\n      }\n      return data;\n    } catch (err) {\n      setError(err.message);\n      throw new Error(err.message);\n    }\n  };\n\n  // Signup handler - creates new user and logs them in\n  const signup = async (credentials) => {\n    try {\n      const response = await fetch('/api/auth/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(credentials)\n      });\n\n      const data = await response.json();\n      \n      if (!response.ok) {\n        throw new Error(data.error || 'Signup failed');\n      }\n\n      // Store user data and token after successful signup\n      setUser(data.user);\n      localStorage.setItem('token', data.token);\n      return data;\n    } catch (err) {\n      setError(err.message);\n      throw new Error(err.message);\n    }\n  };\n\n  // Logout handler - clears auth state\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    setError(null);\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, error, login, signup, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => useContext(AuthContext);\n","\nimport React from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\n\nconst Navbar = () => {\n  const navigate = useNavigate();\n  const { user, logout } = useAuth();\n  const location = useLocation();\n\n  return (\n    <nav className=\"sidebar\">\n      <div className=\"sidebar-content\">\n        <div className=\"sidebar-top\">\n          <div className=\"logo\">boola</div>\n          <div className=\"nav-links\">\n            <button \n              className={`nav-link ${location.pathname === '/ventures' ? 'active' : ''}`}\n              onClick={() => navigate('/ventures')}\n            >\n              Ventures\n            </button>\n            <button \n              className={`nav-link ${location.pathname === '/insights' ? 'active' : ''}`}\n              onClick={() => navigate('/insights')}\n            >\n              Insights\n            </button>\n          </div>\n        </div>\n        <div className=\"sidebar-bottom\">\n          {user && (\n            <>\n              <span className=\"user-email\">{user.email}</span>\n              <button className=\"sign-out-btn\" onClick={logout}>Sign Out</button>\n            </>\n          )}\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","\nimport React, { useState } from 'react';\n\nconst AuthForm = ({ onSubmit, isLogin }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const [error, setError] = useState('');\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n    try {\n      await onSubmit({ email, password });\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"auth-form\">\n      <input\n        type=\"email\"\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n        placeholder=\"Email\"\n        required\n      />\n      <input\n        type=\"password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n        placeholder=\"Password\"\n        required\n      />\n      {error && <div className=\"error-message\">{error}</div>}\n      <button type=\"submit\">\n        {isLogin ? 'Sign In' : 'Sign Up'}\n      </button>\n    </form>\n  );\n};\n\nexport default AuthForm;\n","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nconst VentureList = () => {\n    const navigate = useNavigate();\n    const [ventures, setVentures] = useState([]);\n    const [error, setError] = useState('');\n\n    const fetchData = async () => {\n        try {\n            const token = localStorage.getItem('token');\n            if (!token) {\n                setError('No authentication token found');\n                return;\n            }\n\n            const headers = { 'Authorization': `Bearer ${token}` };\n            const venturesRes = await axios.get('/api/ventures', { headers });\n            setVentures(venturesRes.data.ventures || []);\n        } catch (error) {\n            console.error('Error fetching data:', error.response || error);\n            setError(error.response?.data?.error || 'Failed to fetch data');\n        }\n    };\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    return (\n        <div className=\"venture-list\">\n            {error && <p className=\"error\">{error}</p>}\n            {ventures.map(venture => (\n                <div key={venture.venture_id} className=\"venture-card\" onClick={() => navigate(`/ventures/${venture.name}`)}>\n                    <h3>{venture.name}</h3>\n                    <p>{venture.description}</p>\n                    <div className=\"meta\">\n                        {new Date(venture.created_at).toLocaleDateString()} · {venture.active ? 'Active' : 'Inactive'}\n                    </div>\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default VentureList;","\nimport React from 'react';\nimport VentureList from '../components/VentureList';\nimport '../styles/venture-page.css';\n\nconst VenturesPage = () => {\n    return (\n        <div className=\"ventures-page\">\n            <h1 className=\"welcome-title\">Welcome to your portfolio</h1>\n            <hr className=\"separator\" />\n            <div className=\"ventures-section\">\n                <h2 className=\"section-title\">My ventures</h2>\n                <button className=\"create-new\">+ Create new</button>\n                <VentureList />\n            </div>\n        </div>\n    );\n};\n\nexport default VenturesPage;\n","\nimport React from 'react';\n\nfunction InsightsPage() {\n  return (\n    <div className=\"main-content\">\n      <h1>Insights</h1>\n      <p>Coming soon...</p>\n    </div>\n  );\n}\n\nexport default InsightsPage;\n","\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst HomePage = () => {\n  const navigate = useNavigate();\n\n  return (\n    <div className=\"home-page\">\n      <div className=\"hero-section\">\n        <h1>Your AI Venture Associate</h1>\n        <h2>Make better investment decisions with AI-powered insights</h2>\n        <button \n          className=\"cta-button\"\n          onClick={() => navigate('/login')}\n        >\n          Get Started\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../styles/VentureFileManager.css';\n\nconst VentureFileManager = ({ ventureName }) => {\n  const [files, setFiles] = useState([]);\n  const [urls, setUrls] = useState([]);\n  const [newUrl, setNewUrl] = useState('');\n  const [uploading, setUploading] = useState(false);\n  const [message, setMessage] = useState('');\n  const [details, setDetails] = useState({\n    company_name: '',\n    industry: '',\n    country_of_operation: '',\n    list_of_competitors: []\n  });\n  const [competitors, setCompetitors] = useState('');\n\n  useEffect(() => {\n    loadData();\n  }, [ventureName]);\n\n  const loadData = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const headers = { 'Authorization': `Bearer ${token}` };\n      \n      // Fetch files\n      const filesRes = await axios.get(`/api/venture-files/${ventureName}/files`, { headers });\n      setFiles(filesRes.data.files || []);\n      \n      // Fetch URLs\n      const urlsRes = await axios.get(`/api/venture-files/${ventureName}/urls`, { headers });\n      setUrls(urlsRes.data.urls || []);\n      \n      // Fetch details\n      const detailsRes = await axios.get(`/api/venture-files/${ventureName}/details`, { headers });\n      if (detailsRes.data.details) {\n        setDetails(detailsRes.data.details);\n        setCompetitors(detailsRes.data.details.list_of_competitors.join(', '));\n      }\n    } catch (error) {\n      console.error('Error loading data:', error);\n      setMessage(`Error: ${error.response?.data?.error || 'Failed to load data'}`);\n    }\n  };\n\n  const handleDetailsSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const token = localStorage.getItem('token');\n      const headers = { 'Authorization': `Bearer ${token}` };\n      \n      const updatedDetails = {\n        ...details,\n        list_of_competitors: competitors.split(',').map(comp => comp.trim())\n      };\n      \n      await axios.post(`/api/venture-files/${ventureName}/details`, updatedDetails, { headers });\n      setMessage('Venture details saved successfully!');\n      loadData();\n    } catch (error) {\n      console.error('Error saving details:', error);\n      setMessage(`Error: ${error.response?.data?.error || 'Failed to save details'}`);\n    }\n  };\n\n  const handleUrlSubmit = async (e) => {\n    e.preventDefault();\n    if (!newUrl.startsWith('http://') && !newUrl.startsWith('https://')) {\n      setMessage('Invalid URL. Please ensure it starts with http:// or https://');\n      return;\n    }\n    \n    try {\n      const token = localStorage.getItem('token');\n      const headers = { 'Authorization': `Bearer ${token}` };\n      \n      const updatedUrls = [...urls, newUrl];\n      await axios.post(`/api/venture-files/${ventureName}/urls`, { urls: updatedUrls }, { headers });\n      \n      setUrls(updatedUrls);\n      setNewUrl('');\n      setMessage('URL added successfully!');\n    } catch (error) {\n      console.error('Error adding URL:', error);\n      setMessage(`Error: ${error.response?.data?.error || 'Failed to add URL'}`);\n    }\n  };\n\n  const handleFileUpload = async (e) => {\n    const files = e.target.files;\n    if (!files.length) return;\n    \n    setUploading(true);\n    setMessage('Uploading files...');\n    \n    try {\n      const formData = new FormData();\n      for (let i = 0; i < files.length; i++) {\n        formData.append('files', files[i]);\n      }\n      \n      const token = localStorage.getItem('token');\n      await axios.post(`/api/venture-files/${ventureName}/upload`, formData, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      \n      setMessage('Files uploaded successfully!');\n      loadData();\n    } catch (error) {\n      console.error('Error uploading files:', error);\n      setMessage(`Error: ${error.response?.data?.error || 'Failed to upload files'}`);\n    } finally {\n      setUploading(false);\n    }\n  };\n\n  return (\n    <div className=\"venture-file-manager\">\n      <h2>Manage {ventureName} Files</h2>\n      \n      {message && <div className=\"message\">{message}</div>}\n      \n      <div className=\"file-manager-section\">\n        <h3>Company Details</h3>\n        <form onSubmit={handleDetailsSubmit} className=\"details-form\">\n          <div className=\"form-group\">\n            <label>Company Name:</label>\n            <input\n              type=\"text\"\n              value={details.company_name}\n              onChange={(e) => setDetails({...details, company_name: e.target.value})}\n              required\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label>Industry:</label>\n            <input\n              type=\"text\"\n              value={details.industry}\n              onChange={(e) => setDetails({...details, industry: e.target.value})}\n              required\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label>Country of Operation:</label>\n            <input\n              type=\"text\"\n              value={details.country_of_operation}\n              onChange={(e) => setDetails({...details, country_of_operation: e.target.value})}\n              required\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label>Competitors (comma-separated):</label>\n            <input\n              type=\"text\"\n              value={competitors}\n              onChange={(e) => setCompetitors(e.target.value)}\n              required\n            />\n          </div>\n          \n          <button type=\"submit\" className=\"save-button\">Save Details</button>\n        </form>\n      </div>\n      \n      <div className=\"file-manager-section\">\n        <h3>Company URLs</h3>\n        <form onSubmit={handleUrlSubmit} className=\"url-form\">\n          <div className=\"form-group\">\n            <label>Add URL:</label>\n            <input\n              type=\"url\"\n              value={newUrl}\n              onChange={(e) => setNewUrl(e.target.value)}\n              placeholder=\"https://example.com\"\n              required\n            />\n          </div>\n          <button type=\"submit\" className=\"save-button\">Add URL</button>\n        </form>\n        \n        <div className=\"url-list\">\n          <h4>Saved URLs:</h4>\n          {urls.length > 0 ? (\n            <ul>\n              {urls.map((url, index) => (\n                <li key={index}>\n                  <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{url}</a>\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <p>No URLs saved yet.</p>\n          )}\n        </div>\n      </div>\n      \n      <div className=\"file-manager-section\">\n        <h3>Upload Files</h3>\n        <div className=\"file-upload\">\n          <input\n            type=\"file\"\n            id=\"file-upload\"\n            onChange={handleFileUpload}\n            multiple\n            disabled={uploading}\n          />\n          <label htmlFor=\"file-upload\" className={`file-upload-label ${uploading ? 'disabled' : ''}`}>\n            {uploading ? 'Uploading...' : 'Choose Files'}\n          </label>\n        </div>\n        \n        <div className=\"file-list\">\n          <h4>Uploaded Files:</h4>\n          {files.length > 0 ? (\n            <ul>\n              {files.map((file, index) => (\n                <li key={index}>\n                  <a href={file.path} download>{file.name}</a>\n                  <span className=\"file-date\">\n                    {new Date(file.uploadDate).toLocaleDateString()}\n                  </span>\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <p>No files uploaded yet.</p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default VentureFileManager;\n","import React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../styles/VenturePage.css';\nimport VentureFileManager from '../components/VentureFileManager';\n\nconst VenturePage = () => {\n    const { ventureName } = useParams();\n    const [sources, setSources] = useState([]);\n    const [chatMessages, setChatMessages] = useState([{\n        text: \"Hello! I'm your AI assistant. How can I help you today?\",\n        sender: 'assistant'\n    }]);\n    const [chatInput, setChatInput] = useState('');\n    const [activeTab, setActiveTab] = useState('chat'); // Added state for tab management\n\n    const handleChatSubmit = async (e) => {\n        e.preventDefault();\n        if (!chatInput.trim()) return;\n\n        const userMessage = { text: chatInput, sender: 'user' };\n        setChatMessages(prev => [...prev, userMessage]);\n        setChatInput('');\n\n        // Add loading indicator\n        setChatMessages(prev => [...prev, { \n            text: \"Thinking...\", \n            sender: 'assistant',\n            isLoading: true\n        }]);\n\n        try {\n            // Check if this is a response to the URL request\n            if (chatMessages[chatMessages.length - 2]?.text.includes('provide the URL')) {\n                // Handle landing page analysis\n                const response = await fetch('/api/analyzeLandingPage', {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({ userMessage: chatInput })\n                });\n\n                if (!response.ok) {\n                    throw new Error('Failed to analyze landing page');\n                }\n\n                const data = await response.json();\n\n                // Remove loading message and add analysis response\n                setChatMessages(prev => {\n                    const filtered = prev.filter(msg => !msg.isLoading);\n                    return [...filtered, { \n                        text: data.analysis,\n                        sender: 'assistant'\n                    }];\n                });\n            } else {\n                // Handle regular chat\n                const response = await fetch('/api/chat', {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({ message: chatInput })\n                });\n\n                if (!response.ok) {\n                    throw new Error('Failed to get response');\n                }\n\n                const data = await response.json();\n\n                // Remove loading message and add response\n                setChatMessages(prev => {\n                    const filtered = prev.filter(msg => !msg.isLoading);\n                    return [...filtered, { \n                        text: data.response,\n                        sender: 'assistant'\n                    }];\n                });\n            }\n        } catch (error) {\n            console.error('Chat error:', error);\n            setChatMessages(prev => {\n                const filtered = prev.filter(msg => !msg.isLoading);\n                return [...filtered, {\n                    text: \"I apologize, but I'm having trouble responding right now. Please try again.\",\n                    sender: 'assistant'\n                }];\n            });\n        }\n    };\n\n    const agentActions = [\n        { id: 1, label: 'Generate Value Proposition' },\n        { id: 2, label: 'Size the Market' },\n        { id: 3, label: 'Analyze Competition' },\n        { id: 4, label: 'Create SWOT Analysis' },\n        { id: 5, label: 'Generate Business Model Canvas' },\n        { id: 6, label: 'Assess Market Fit' },\n        { id: 7, label: 'Analyze Landing Page', onClick: async () => {\n            setChatMessages(prev => [...prev, {\n                text: \"Please provide the URL you'd like me to analyze.\",\n                sender: 'assistant'\n            }]);\n        }},\n        { id: 8, label: 'Risk Assessment' }\n    ];\n\n    return (\n        <div className=\"venture-page\">\n            <h1>{ventureName}</h1>\n\n            <div className=\"venture-tabs\">\n                <button \n                    className={`tab-button ${activeTab === 'chat' ? 'active' : ''}`}\n                    onClick={() => setActiveTab('chat')}\n                >\n                    Chat\n                </button>\n                <button \n                    className={`tab-button ${activeTab === 'files' ? 'active' : ''}`}\n                    onClick={() => setActiveTab('files')}\n                >\n                    Files & Information\n                </button>\n            </div>\n\n            {activeTab === 'chat' && (\n                <>\n                    <div className=\"chat-panel\">\n                        <div className=\"panel-header\">\n                            <h2>Chat</h2>\n                        </div>\n                        <div className=\"chat-messages\">\n                            {chatMessages.map((msg, index) => (\n                                <div key={index} className={`message ${msg.sender}`}>\n                                    {msg.text}\n                                </div>\n                            ))}\n                        </div>\n                        <form onSubmit={handleChatSubmit} className=\"chat-input-form\">\n                            <input\n                                type=\"text\"\n                                value={chatInput}\n                                onChange={(e) => setChatInput(e.target.value)}\n                                placeholder=\"Ask anything...\"\n                                className=\"chat-input\"\n                            />\n                            <button type=\"submit\" className=\"send-button\">Send</button>\n                        </form>\n                    </div>\n                    <div className=\"actions-panel\">\n                        <div className=\"panel-header\">\n                            <h2>Actions</h2>\n                        </div>\n                        <div className=\"actions-list\">\n                            {agentActions.map((action) => (\n                                <button\n                                    key={action.id}\n                                    className=\"action-button\"\n                                    onClick={action.onClick || (() => console.log(`Action clicked: ${action.label}`))}\n                                >\n                                    {action.label}\n                                </button>\n                            ))}\n                        </div>\n                    </div>\n                </>\n            )}\n\n            {activeTab === 'files' && (\n                <VentureFileManager ventureName={ventureName} />\n            )}\n        </div>\n    );\n};\n\nexport default VenturePage;","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport AuthForm from './components/AuthForm';\nimport VenturesPage from './pages/VenturesPage';\nimport InsightsPage from './pages/InsightsPage';\nimport HomePage from './pages/HomePage'; // Import HomePage component\nimport { AuthProvider, useAuth } from './context/AuthContext';\nimport './styles/main.css';\nimport VenturePage from './pages/VenturePage'; // Added import for VenturePage\n\nfunction PrivateRoute({ children }) {\n  const { user } = useAuth();\n  return user ? children : <Navigate to=\"/\" />;\n}\n\nfunction AppContent() {\n  const { user, login, signup } = useAuth();\n  const [isLogin, setIsLogin] = React.useState(true);\n\n  return (\n    <div className=\"app-container\">\n      {user && <Navbar />}\n      <div className=\"main-content\">\n        <Routes>\n          <Route path=\"/ventures\" element={\n            <PrivateRoute>\n              <VenturesPage />\n            </PrivateRoute>\n          } />\n          <Route path=\"/ventures/:ventureName\" element={ // Updated path\n            <PrivateRoute>\n              <VenturePage />\n            </PrivateRoute>\n          } />\n          <Route path=\"/insights\" element={\n            <PrivateRoute>\n              <InsightsPage />\n            </PrivateRoute>\n          } />\n          <Route path=\"/\" element={\n            user ? <Navigate to=\"/ventures\" /> : <HomePage />\n          } />\n          <Route path=\"/login\" element={\n            user ? <Navigate to=\"/ventures\" /> : (\n              <div className=\"auth-container\">\n                <h1>{isLogin ? 'Sign In' : 'Sign Up'}</h1>\n                <AuthForm onSubmit={isLogin ? login : signup} isLogin={isLogin} />\n                <button \n                  className=\"switch-auth\" \n                  onClick={() => setIsLogin(!isLogin)}\n                >\n                  {isLogin ? 'Need an account? Sign up' : 'Have an account? Sign in'}\n                </button>\n              </div>\n            )\n          } />\n        </Routes>\n      </div>\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <Router>\n        <AppContent />\n      </Router>\n    </AuthProvider>\n  );\n}\n\nexport default App;","\nimport React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport App from './App';\nimport '../src/styles/main.css';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container);\n\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}