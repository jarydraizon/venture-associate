{"version":3,"sources":["context/AuthContext.js","components/Navbar.js","components/AuthForm.js","components/VentureList.js","pages/VenturesPage.js","pages/InsightsPage.js","pages/HomePage.js","components/VentureFileManager.js","pages/VenturePage.js","App.js","index.js"],"names":["AuthContext","createContext","AuthProvider","_ref","children","user","setUser","useState","initialUser","localStorage","getItem","email","console","log","error","setError","React","createElement","Provider","value","login","async","response","fetch","method","headers","body","JSON","stringify","credentials","data","json","ok","Error","token","_data$user","userObj","user_id","setItem","err","message","signup","logout","removeItem","useAuth","useContext","Navbar","navigate","useNavigate","location","useLocation","className","src","alt","width","height","style","marginRight","verticalAlign","concat","pathname","onClick","Fragment","AuthForm","onSubmit","isLogin","setEmail","password","setPassword","e","preventDefault","type","onChange","target","placeholder","required","VentureList","ventures","setVentures","loading","setLoading","useEffect","axios","get","Array","isArray","venturesArray","Object","values","_error$response","_error$response$data","fetchVentures","length","map","venture","Link","to","name","key","venture_id","Math","random","toString","substring","description","created_at","Date","toLocaleDateString","VenturesPage","isCreating","setIsCreating","newVenture","setNewVenture","handleChange","_objectSpread","post","success","htmlFor","id","rows","handleCancel","handleCreateNew","InsightsPage","setMessage","chatMessages","setChatMessages","activeVenture","setActiveVenture","status","fetchActiveVenture","marginBottom","msg","index","sender","text","trim","setTimeout","prev","action","handleActionClick","HomePage","VentureFileManager","ventureName","competitorId","fullWidth","files","setFiles","uploading","setUploading","urls","setUrls","details","setDetails","industry","website","regions","savingUrls","setSavingUrls","getApiEndpoint","base","loadData","fetchFiles","handleDetailChange","getAuthConfig","endpoint","config","alert","urlsArray","split","filter","url","multiple","event","formData","FormData","i","append","disabled","display","file","href","path","download","VenturePage","useParams","activePanel","setActivePanel","setVenture","competitors","setCompetitors","activeCompetitor","setActiveCompetitor","isEditingVenture","setIsEditingVenture","isEditingCompetitor","setIsEditingCompetitor","newCompetitor","setNewCompetitor","detailsRes","competitorsRes","sort","a","b","localeCompare","fetchVentureData","handleVentureChange","handleCompetitorChange","handleActiveCompetitorChange","Authorization","saveVentureDetails","keys","some","rel","competitor","selectCompetitor","addedCompetitor","_err$response","_err$response$data","errorMessage","put","comp","saveCompetitorDetails","PrivateRoute","Navigate","AppContent","setIsLogin","Routes","Route","element","App","Router","container","document","getElementById","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.ea1b3c68.chunk.js","sourcesContent":["\nimport React, { createContext, useState, useContext } from 'react';\n\nconst AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n  // Initialize user state from localStorage if token exists\n  const [user, setUser] = useState(() => {\n    const token = localStorage.getItem('token');\n    const initialUser = token ? { email: localStorage.getItem('userEmail') } : null;\n    console.log('Initial user state:', initialUser);\n    return initialUser;\n  });\n  const [error, setError] = useState(null);\n\n  // Login handler - authenticates user and stores token\n  const login = async (credentials) => {\n    try {\n      // Make API request to login endpoint\n      const response = await fetch('/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(credentials)\n      });\n\n      const data = await response.json();\n      \n      // Handle unsuccessful login\n      if (!response.ok) {\n        throw new Error(data.error || 'Login failed');\n      }\n\n      // Only set user state if we received a valid token\n      if (data.token) {\n        const userObj = {\n          email: credentials.email,\n          user_id: data.user_id || data.user?.user_id\n        };\n        \n        // Store auth data in localStorage and state\n        localStorage.setItem('token', data.token);\n        localStorage.setItem('userEmail', credentials.email);\n        setUser(userObj);\n      } else {\n        throw new Error('Invalid login response');\n      }\n      return data;\n    } catch (err) {\n      setError(err.message);\n      throw new Error(err.message);\n    }\n  };\n\n  // Signup handler - creates new user and logs them in\n  const signup = async (credentials) => {\n    try {\n      const response = await fetch('/api/auth/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(credentials)\n      });\n\n      const data = await response.json();\n      \n      if (!response.ok) {\n        throw new Error(data.error || 'Signup failed');\n      }\n\n      // Store user data and token after successful signup\n      setUser(data.user);\n      localStorage.setItem('token', data.token);\n      return data;\n    } catch (err) {\n      setError(err.message);\n      throw new Error(err.message);\n    }\n  };\n\n  // Logout handler - clears auth state\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    setError(null);\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, error, login, signup, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => useContext(AuthContext);\n","import React from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\n\nconst Navbar = () => {\n  const navigate = useNavigate();\n  const { user, logout } = useAuth();\n  const location = useLocation();\n\n  return (\n    <nav className=\"sidebar\">\n      <div className=\"sidebar-content\">\n        <div className=\"sidebar-top\">\n          <div className=\"logo\">\n            <img src=\"/logo.svg\" alt=\"boola\" width=\"32\" height=\"32\" style={{ marginRight: '8px', verticalAlign: 'middle' }} />\n            boola\n          </div>\n          <div className=\"nav-links\">\n            <button \n              className={`nav-link ${location.pathname === '/ventures' ? 'active' : ''}`}\n              onClick={() => navigate('/ventures')}\n            >\n              Ventures\n            </button>\n            <button \n              className={`nav-link ${location.pathname === '/insights' ? 'active' : ''}`}\n              onClick={() => navigate('/insights')}\n            >\n              Insights\n            </button>\n          </div>\n        </div>\n        <div className=\"sidebar-bottom\">\n          {user && (\n            <>\n              <span className=\"user-email\">{user.email}</span>\n              <button className=\"sign-out-btn\" onClick={logout}>Sign Out</button>\n            </>\n          )}\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;","\nimport React, { useState } from 'react';\n\nconst AuthForm = ({ onSubmit, isLogin }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const [error, setError] = useState('');\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n    try {\n      await onSubmit({ email, password });\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"auth-form\">\n      <input\n        type=\"email\"\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n        placeholder=\"Email\"\n        required\n      />\n      <input\n        type=\"password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n        placeholder=\"Password\"\n        required\n      />\n      {error && <div className=\"error-message\">{error}</div>}\n      <button type=\"submit\">\n        {isLogin ? 'Sign In' : 'Sign Up'}\n      </button>\n    </form>\n  );\n};\n\nexport default AuthForm;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport '../styles/VentureList.css';\n\nconst VentureList = () => {\n    const [ventures, setVentures] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState('');\n\n    console.log('VentureList component rendered');\n\n    useEffect(() => {\n        const fetchVentures = async () => {\n            try {\n                const token = localStorage.getItem('token');\n                if (!token) {\n                    setError('No authentication token found');\n                    setLoading(false);\n                    return;\n                }\n\n                console.log('Fetching ventures...');\n                const response = await axios.get('/api/ventures', {\n                    headers: { 'Authorization': `Bearer ${token}` }\n                });\n\n                console.log('Ventures response:', response.data);\n\n                if (Array.isArray(response.data.ventures)) {\n                    setVentures(response.data.ventures);\n                } else if (typeof response.data.ventures === 'object') {\n                    // Convert object to array if needed\n                    const venturesArray = Object.values(response.data.ventures);\n                    setVentures(venturesArray);\n                    console.log('Converted ventures to array:', venturesArray);\n                } else {\n                    console.error('Unexpected ventures format:', response.data.ventures);\n                    setError('Received unexpected data format from server');\n                }\n\n                setLoading(false);\n            } catch (error) {\n                console.error('Error fetching ventures:', error.response || error);\n                setError(error.response?.data?.error || 'Failed to fetch ventures');\n                setLoading(false);\n            }\n        };\n\n        fetchVentures();\n    }, []);\n\n    return (\n        <div className=\"venture-list\">\n            {loading ? (\n                <p>Loading ventures...</p>\n            ) : error ? (\n                <p className=\"error-message\">{error}</p>\n            ) : ventures.length === 0 ? (\n                <p>No ventures found. Create one to get started!</p>\n            ) : (\n                <div className=\"ventures-grid\">\n                    {ventures.map(venture => {\n                        console.log('Rendering venture:', venture);\n                        return (\n                            <Link \n                                to={`/ventures/${venture.name}`}\n                                key={venture.venture_id || Math.random().toString(36).substring(7)}\n                                className=\"venture-card\"\n                            >\n                                <h3>{venture.name}</h3>\n                                <p>{venture.description || 'No description available'}</p>\n                                <p className=\"venture-date\">\n                                    {venture.created_at \n                                        ? new Date(venture.created_at).toLocaleDateString() \n                                        : 'Date unavailable'}\n                                </p>\n                            </Link>\n                        );\n                    })}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default VentureList;","\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport VentureList from '../components/VentureList';\nimport '../styles/venture-page.css';\n\nconst VenturesPage = () => {\n    const navigate = useNavigate();\n    const [isCreating, setIsCreating] = useState(false);\n    const [newVenture, setNewVenture] = useState({ name: '', description: '' });\n    const [error, setError] = useState('');\n\n    const handleCreateNew = () => {\n        setIsCreating(true);\n    };\n\n    const handleCancel = () => {\n        setIsCreating(false);\n        setNewVenture({ name: '', description: '' });\n    };\n\n    const handleChange = (e) => {\n        setNewVenture({\n            ...newVenture,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            const token = localStorage.getItem('token');\n            if (!token) {\n                setError('No authentication token found');\n                return;\n            }\n\n            const headers = { 'Authorization': `Bearer ${token}` };\n            const response = await axios.post('/api/ventures', newVenture, { headers });\n            \n            if (response.data.success) {\n                setIsCreating(false);\n                // Redirect to the new venture page\n                navigate(`/ventures/${newVenture.name}`);\n            }\n        } catch (error) {\n            console.error('Error creating venture:', error.response || error);\n            setError(error.response?.data?.error || 'Failed to create venture');\n        }\n    };\n\n    return (\n        <div className=\"ventures-page\">\n            <h1 className=\"welcome-title\">Welcome to your portfolio</h1>\n            <hr className=\"separator\" />\n            <div className=\"ventures-section\">\n                <h2 className=\"section-title\">My ventures</h2>\n                \n                {!isCreating ? (\n                    <button className=\"create-new\" onClick={handleCreateNew}>+ Create new</button>\n                ) : (\n                    <div className=\"create-venture-form\">\n                        <h3>Create New Venture</h3>\n                        {error && <p className=\"error\">{error}</p>}\n                        <form onSubmit={handleSubmit}>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"name\">Venture Name:</label>\n                                <input\n                                    type=\"text\"\n                                    id=\"name\"\n                                    name=\"name\"\n                                    value={newVenture.name}\n                                    onChange={handleChange}\n                                    required\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"description\">Description:</label>\n                                <textarea\n                                    id=\"description\"\n                                    name=\"description\"\n                                    value={newVenture.description}\n                                    onChange={handleChange}\n                                    rows=\"3\"\n                                />\n                            </div>\n                            <div className=\"form-actions\">\n                                <button type=\"button\" onClick={handleCancel}>Cancel</button>\n                                <button type=\"submit\">Create</button>\n                            </div>\n                        </form>\n                    </div>\n                )}\n                \n                <VentureList />\n            </div>\n        </div>\n    );\n};\n\nexport default VenturesPage;\n","\nimport React, { useState, useEffect } from 'react';\nimport '../styles/insights-page.css';\n\nfunction InsightsPage() {\n  const [message, setMessage] = useState('');\n  const [chatMessages, setChatMessages] = useState([]);\n  const [activeVenture, setActiveVenture] = useState(null);\n\n  // Fetch active venture on component mount\n  useEffect(() => {\n    // Simulate fetching active venture data\n    // In a real implementation, this would be an API call\n    const fetchActiveVenture = async () => {\n      // Example venture data - in production this would come from your API\n      setActiveVenture({\n        id: 9,\n        name: 'MIllivolt',\n        description: 'GPU Processing Algorithm',\n        status: 'Active'\n      });\n    };\n\n    fetchActiveVenture();\n  }, []);\n\n  const handleSendMessage = (e) => {\n    e.preventDefault();\n    if (message.trim() === '') return;\n    \n    // Add user message to chat\n    setChatMessages([...chatMessages, { text: message, sender: 'user' }]);\n    setMessage('');\n    \n    // Simulate AI response (would be replaced with actual API call)\n    setTimeout(() => {\n      setChatMessages(prev => [...prev, { \n        text: `I'm analyzing your question about \"${message}\"...`, \n        sender: 'assistant' \n      }]);\n    }, 1000);\n  };\n\n  const actions = [\n    \"Generate Value Proposition\",\n    \"Size the Market\",\n    \"Analyze Competition\",\n    \"Create SWOT Analysis\",\n    \"Generate Business Model Canvas\",\n    \"Assess Market Fit\",\n    \"Financial Projections\",\n    \"Risk Assessment\"\n  ];\n\n  const handleActionClick = (action) => {\n    console.log(`Action selected: ${action}`);\n    // Would implement the functionality for each action\n  };\n\n  return (\n    <div className=\"main-content\">\n      <h1 className=\"page-title\" style={{ marginBottom: '1rem' }}>Your Digital Copilot</h1>\n      \n      <div className=\"insights-container\">\n        {/* Venture Info Panel */}\n        <div className=\"venture-info-panel\">\n          <h2>Active Venture</h2>\n          {activeVenture ? (\n            <div className=\"venture-details\">\n              <h3>{activeVenture.name}</h3>\n              <p className=\"venture-description\">{activeVenture.description}</p>\n              <div className=\"venture-status\">\n                <span className=\"status-indicator\"></span>\n                {activeVenture.status}\n              </div>\n              <div className=\"venture-metrics\">\n                <div className=\"metric\">\n                  <span className=\"metric-label\">Documents</span>\n                  <span className=\"metric-value\">12</span>\n                </div>\n                <div className=\"metric\">\n                  <span className=\"metric-label\">Analyses</span>\n                  <span className=\"metric-value\">5</span>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <p>No venture selected</p>\n          )}\n        </div>\n        \n        {/* Chat Panel */}\n        <div className=\"chat-panel\">\n          <h2>Chat</h2>\n          <div className=\"chat-messages\">\n            {chatMessages.length === 0 ? (\n              <div className=\"empty-chat\">\n                <p>No messages yet</p>\n                <p>Start a conversation</p>\n              </div>\n            ) : (\n              chatMessages.map((msg, index) => (\n                <div key={index} className={`message ${msg.sender}`}>\n                  {msg.text}\n                </div>\n              ))\n            )}\n          </div>\n          <form className=\"chat-input-form\" onSubmit={handleSendMessage}>\n            <input\n              type=\"text\"\n              className=\"chat-input\"\n              placeholder=\"Ask anything about this venture...\"\n              value={message}\n              onChange={(e) => setMessage(e.target.value)}\n            />\n            <button type=\"submit\" className=\"send-button\">Send</button>\n          </form>\n        </div>\n        \n        {/* Actions Panel */}\n        <div className=\"actions-panel\">\n          <h2>Actions</h2>\n          <div className=\"actions-list\">\n            {actions.map((action, index) => (\n              <button \n                key={index}\n                className=\"action-button\"\n                onClick={() => handleActionClick(action)}\n              >\n                {action}\n              </button>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default InsightsPage;\n","\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst HomePage = () => {\n  const navigate = useNavigate();\n\n  return (\n    <div className=\"home-page\">\n      <div className=\"hero-section\">\n        <h1>Your AI Venture Associate</h1>\n        <h2>Make better investment decisions with AI-powered insights</h2>\n        <button \n          className=\"cta-button\"\n          onClick={() => navigate('/login')}\n        >\n          Get Started\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../styles/VentureFileManager.css';\n\nfunction VentureFileManager({ ventureName, competitorId, fullWidth }) {\n  const [files, setFiles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [uploading, setUploading] = useState(false);\n  const [urls, setUrls] = useState('');\n  const [details, setDetails] = useState({ name: '', description: '', industry: '', website: '', regions: '' });\n  const [savingUrls, setSavingUrls] = useState(false); // Added state for URL saving\n\n  const getApiEndpoint = () => {\n    const base = `/api/venture-files/${ventureName}`;\n    return competitorId ? `${base}/competitors/${competitorId}` : base;\n  };\n\n  const loadData = async () => {\n    try {\n      setLoading(true);\n      setError(''); // Clear any previous errors\n      await fetchFiles();\n    } catch (err) {\n      console.error('Error loading data:', err);\n      setError('Failed to load data. Please try again.');\n      setLoading(false);\n    }\n  };\n\n  // Add useEffect to load data when component mounts\n  useEffect(() => {\n    loadData();\n  }, [ventureName, competitorId]); // Add dependencies to reload when these change\n\n  useEffect(() => {\n    if (ventureName) {\n      loadData();\n    }\n  }, [ventureName, competitorId]);\n\n  const handleFileUpload = async (event) => {\n    const files = event.target.files;\n    if (!files.length) return;\n\n    const formData = new FormData();\n    for (let i = 0; i < files.length; i++) {\n      formData.append('files', files[i]);\n    }\n\n    try {\n      setUploading(true);\n      const endpoint = getApiEndpoint();\n      await axios.post(`${endpoint}/upload`, formData, {\n        headers: { 'Content-Type': 'multipart/form-data' }\n      });\n      loadData(); // Refresh the file list\n      setUploading(false);\n    } catch (err) {\n      console.error('Upload error:', err);\n      setError('File upload failed');\n      setUploading(false);\n    }\n  };\n\n  const handleSaveUrls = async () => {\n    try {\n      setSavingUrls(true);\n      const endpoint = getApiEndpoint();\n\n      // Split URLs by new line and filter out empty lines\n      const urlsArray = urls.split('\\n').filter(url => url.trim() !== '');\n\n      await axios.post(`${endpoint}/urls`, { urls: urlsArray }, getAuthConfig());\n\n      alert('URLs saved successfully');\n      setSavingUrls(false);\n    } catch (err) {\n      console.error('Error saving URLs:', err);\n      alert('Failed to save URLs');\n      setSavingUrls(false);\n    }\n  };\n\n  const handleSaveDetails = async () => {\n    try {\n      const endpoint = getApiEndpoint();\n      await axios.post(`${endpoint}/details`, details, getAuthConfig()); // Added getAuthConfig()\n      alert('Details saved successfully');\n    } catch (err) {\n      console.error('Error saving details:', err);\n      setError('Failed to save details');\n    }\n  };\n\n  const handleDetailChange = (e) => {\n    const { name, value } = e.target;\n    setDetails(prev => ({ ...prev, [name]: value }));\n  };\n\n  if (loading) return <div className=\"loading\">Loading data...</div>;\n  if (error) return <div className=\"error\">{error}</div>;\n\n  // Get authentication configuration for API requests\n  const getAuthConfig = () => {\n    const token = localStorage.getItem('token');\n    return {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    };\n  };\n\n  //Closure to access state variables within fetchFiles\n  const fetchFiles = async () => {\n    try {\n      setLoading(true);\n      const endpoint = `${getApiEndpoint()}/files`;\n      console.log('Fetching files from:', endpoint);\n      \n      const config = getAuthConfig();\n      const response = await axios.get(endpoint, config);\n      console.log('Files response:', response.data);\n      \n      if (response.data.files) {\n        setFiles(response.data.files);\n      }\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching files:', error);\n      if (error.response && error.response.status === 401) {\n        setError('Authentication failed. Please log in again.');\n      } else {\n        setError('Failed to load files. Please try again.');\n      }\n      setLoading(false);\n    }\n  };\n\n\n  return (\n    <div className={`venture-file-manager ${fullWidth ? 'full-width' : ''}`}>\n      {!fullWidth && (\n        <div className=\"venture-section\">\n          <h2>{competitorId ? 'Competitor Details' : 'Venture Details'}</h2>\n          <div className=\"form-group\">\n            <label>Name:</label>\n            <input \n              type=\"text\" \n              name=\"name\" \n              value={details.name || ''} \n              onChange={handleDetailChange} \n              placeholder=\"Company name\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Industry:</label>\n            <input \n              type=\"text\" \n              name=\"industry\" \n              value={details.industry || ''} \n              onChange={handleDetailChange} \n              placeholder=\"Industry\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Website:</label>\n            <input \n              type=\"text\" \n              name=\"website\" \n              value={details.website || ''} \n              onChange={handleDetailChange} \n              placeholder=\"Website URL\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Regions of Operation:</label>\n            <input \n              type=\"text\" \n              name=\"regions\" \n              value={details.regions || ''} \n              onChange={handleDetailChange} \n              placeholder=\"Regions of operation\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Description:</label>\n            <textarea \n              name=\"description\" \n              value={details.description || ''} \n              onChange={handleDetailChange} \n              placeholder=\"Description\"\n            />\n          </div>\n          <button onClick={handleSaveDetails} className=\"save-btn\">Save Details</button>\n        </div>\n      )}\n\n      <div className=\"venture-section\">\n        <h2>Important URLs</h2>\n        <p className=\"helper-text\">Enter one URL per line (website, landing pages, competitors, etc.)</p>\n        <textarea \n          value={urls} \n          onChange={(e) => setUrls(e.target.value)} \n          placeholder=\"https://example.com\"\n          rows={5}\n        />\n        <button onClick={handleSaveUrls} className=\"save-btn\">Save URLs</button>\n      </div>\n\n      <div className=\"venture-section\">\n        <h2>Uploaded Files</h2>\n        <div className=\"file-upload\">\n          <label className=\"upload-btn\">\n            Upload Files\n            <input \n              type=\"file\" \n              multiple \n              onChange={handleFileUpload} \n              disabled={uploading}\n              style={{ display: 'none' }}\n            />\n          </label>\n          {uploading && <span className=\"uploading\">Uploading...</span>}\n        </div>\n\n        <div className=\"files-list\">\n          {files.length > 0 ? (\n            files.map((file, index) => (\n              <div key={index} className=\"file-item\">\n                <span className=\"file-name\">{file.name}</span>\n                <a \n                  href={file.path} \n                  download \n                  className=\"download-link\"\n                >\n                  Download\n                </a>\n              </div>\n            ))\n          ) : (\n            <p className=\"no-files\">No files uploaded yet</p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// Add authentication token to requests\nconst getAuthConfig = () => {\n  const token = localStorage.getItem('token');\n  return {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  };\n};\n\n\nexport { VentureFileManager };","\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport '../styles/VenturePage.css';\nimport { VentureFileManager } from '../components/VentureFileManager';\n\nconst VenturePage = () => {\n  const { ventureName } = useParams();\n  const [activePanel, setActivePanel] = useState('venture');\n  const [venture, setVenture] = useState({ \n    name: '', \n    description: '', \n    industry: '', \n    website: '', \n    regions: '' \n  });\n  const [competitors, setCompetitors] = useState([]);\n  const [activeCompetitor, setActiveCompetitor] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [isEditingVenture, setIsEditingVenture] = useState(false);\n  const [isEditingCompetitor, setIsEditingCompetitor] = useState(false);\n  const [newCompetitor, setNewCompetitor] = useState({ \n    name: '', \n    description: '', \n    industry: '', \n    website: '', \n    regions: '' \n  });\n\n  // Fetch venture data and competitors\n  useEffect(() => {\n    const fetchVentureData = async () => {\n      try {\n        setLoading(true);\n        console.log('Loading venture data for:', ventureName);\n        \n        // Get auth token from localStorage\n        const token = localStorage.getItem('token');\n        \n        if (!token) {\n          setError('Authentication required. Please log in again.');\n          setLoading(false);\n          return;\n        }\n        \n        // Configure headers with authentication\n        const config = {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        };\n        \n        // Fetch venture details with auth headers\n        const detailsRes = await axios.get(`/api/ventures/${ventureName}/details`, config);\n        console.log('Venture details response:', detailsRes.data);\n        \n        if (detailsRes.data.details) {\n          setVenture(detailsRes.data.details);\n        }\n        \n        // Fetch competitors with auth headers\n        const competitorsRes = await axios.get(`/api/ventures/${ventureName}/competitors`, config);\n        console.log('Competitors response:', competitorsRes.data);\n        \n        if (competitorsRes.data.competitors) {\n          setCompetitors(competitorsRes.data.competitors.sort((a, b) => a.name.localeCompare(b.name)));\n        }\n        \n        setLoading(false);\n      } catch (err) {\n        console.error('Error loading venture data:', err);\n        if (err.response && err.response.status === 401) {\n          setError('Session expired. Please log in again.');\n        } else {\n          setError('Failed to load venture data. Please try refreshing the page.');\n        }\n        setLoading(false);\n      }\n    };\n\n    if (ventureName) {\n      fetchVentureData();\n    }\n  }, [ventureName]);\n\n  const handleVentureChange = (e) => {\n    const { name, value } = e.target;\n    setVenture(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleCompetitorChange = (e) => {\n    const { name, value } = e.target;\n    setNewCompetitor(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleActiveCompetitorChange = (e) => {\n    const { name, value } = e.target;\n    setActiveCompetitor(prev => ({ ...prev, [name]: value }));\n  };\n\n  const saveVentureDetails = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const config = {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      };\n      \n      await axios.post(`/api/ventures/${ventureName}/details`, venture, config);\n      setIsEditingVenture(false);\n      alert('Venture details saved successfully');\n    } catch (err) {\n      console.error('Error saving venture details:', err);\n      alert('Failed to save venture details');\n    }\n  };\n\n  const saveCompetitorDetails = async () => {\n    try {\n      if (activeCompetitor) {\n        const token = localStorage.getItem('token');\n        const config = {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        };\n        \n        // Update existing competitor\n        await axios.put(`/api/ventures/${ventureName}/competitors/${activeCompetitor.id}`, activeCompetitor, config);\n        \n        // Update the competitors list\n        setCompetitors(prev => \n          prev.map(comp => comp.id === activeCompetitor.id ? activeCompetitor : comp)\n            .sort((a, b) => a.name.localeCompare(b.name))\n        );\n        \n        setIsEditingCompetitor(false);\n        alert('Competitor details updated successfully');\n      }\n    } catch (err) {\n      console.error('Error updating competitor:', err);\n      alert('Failed to update competitor details');\n    }\n  };\n\n  const addNewCompetitor = async () => {\n    try {\n      // Verify we have all required fields\n      if (!newCompetitor.name.trim()) {\n        alert('Competitor name is required');\n        return;\n      }\n      \n      // Get auth token from localStorage\n      const token = localStorage.getItem('token');\n      if (!token) {\n        alert('You need to be logged in to add a competitor');\n        return;\n      }\n      \n      const config = {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      };\n      \n      console.log('Adding competitor for venture:', ventureName);\n      console.log('Competitor data:', newCompetitor);\n      \n      // Ensure the endpoint is properly formatted\n      const response = await axios.post(`/api/ventures/${ventureName}/competitors`, newCompetitor, config);\n      console.log('Add competitor response:', response.data);\n      \n      const addedCompetitor = response.data.competitor;\n      \n      // Add to competitors list\n      setCompetitors(prev => \n        [...prev, addedCompetitor].sort((a, b) => a.name.localeCompare(b.name))\n      );\n      \n      // Reset form\n      setNewCompetitor({ \n        name: '', \n        description: '', \n        industry: '', \n        website: '', \n        regions: '' \n      });\n      \n      // Set the newly added competitor as active\n      setActiveCompetitor(addedCompetitor);\n      setActivePanel('competitor');\n      alert('Competitor added successfully');\n    } catch (err) {\n      console.error('Error adding competitor:', err);\n      const errorMessage = err.response?.data?.error || err.message || 'unknown error';\n      alert(`Failed to add competitor: ${errorMessage}`);\n      console.error('Error adding competitor:', err);\n      if (err.response) {\n        console.error('Error response:', err.response.data);\n        console.error('Status code:', err.response.status);\n        if (err.response.status === 401) {\n          alert('Session expired. Please log in again.');\n        } else {\n          alert(`Failed to add competitor: ${err.response.data.error || 'Unknown error'}`);\n        }\n      } else {\n        alert('Failed to add competitor: Network error');\n      }\n    }\n  };\n\n  const selectCompetitor = (competitor) => {\n    setActiveCompetitor(competitor);\n    setActivePanel('competitor');\n    setIsEditingCompetitor(false);\n  };\n\n  if (loading) return <div className=\"loading-screen\">Loading venture data...</div>;\n  if (error) return <div className=\"error-message\">{error}</div>;\n\n  return (\n    <div className=\"venture-page\">\n      <div className=\"venture-header\">\n        <h1>{ventureName}</h1>\n        <div className=\"tabs\">\n          <button \n            className={`tab-button ${activePanel === 'venture' ? 'active' : ''}`} \n            onClick={() => setActivePanel('venture')}\n          >\n            Venture Details\n          </button>\n          <button \n            className={`tab-button ${activePanel === 'competitors' ? 'active' : ''}`} \n            onClick={() => {\n              setActivePanel('competitors');\n              setActiveCompetitor(null);\n            }}\n          >\n            Competitors\n          </button>\n          <button \n            className={`tab-button ${activePanel === 'add-data' ? 'active' : ''}`} \n            onClick={() => setActivePanel('add-data')}\n          >\n            Add Data\n          </button>\n        </div>\n      </div>\n\n      <div className=\"panel-container\">\n        {/* Venture Details Panel */}\n        {activePanel === 'venture' && (\n          <div className=\"panel venture-details-panel\">\n            <div className=\"panel-header\">\n              <h2>Venture Details</h2>\n              <div className=\"panel-actions\">\n                <button \n                  className=\"action-button\"\n                  onClick={() => isEditingVenture ? saveVentureDetails() : setIsEditingVenture(true)}\n                >\n                  {isEditingVenture ? 'Save Details' : 'Edit Details'}\n                </button>\n                <button \n                  className=\"action-button\"\n                  onClick={() => setActivePanel('add-data')}\n                >\n                  Add Data\n                </button>\n              </div>\n            </div>\n\n            <div className=\"panel-content\">\n              {isEditingVenture ? (\n                <div className=\"edit-form\">\n                  <div className=\"form-group\">\n                    <label>Company Name:</label>\n                    <input \n                      type=\"text\" \n                      name=\"name\" \n                      value={venture.name || ''} \n                      onChange={handleVentureChange} \n                      placeholder=\"Company name\"\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label>Industry:</label>\n                    <input \n                      type=\"text\" \n                      name=\"industry\" \n                      value={venture.industry || ''} \n                      onChange={handleVentureChange} \n                      placeholder=\"Industry\"\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label>Website:</label>\n                    <input \n                      type=\"text\" \n                      name=\"website\" \n                      value={venture.website || ''} \n                      onChange={handleVentureChange} \n                      placeholder=\"Website URL\"\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label>Regions of Operation:</label>\n                    <input \n                      type=\"text\" \n                      name=\"regions\" \n                      value={venture.regions || ''} \n                      onChange={handleVentureChange} \n                      placeholder=\"Regions (comma separated)\"\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label>Description:</label>\n                    <textarea \n                      name=\"description\" \n                      value={venture.description || ''} \n                      onChange={handleVentureChange} \n                      placeholder=\"Describe this venture\"\n                      rows={5}\n                    />\n                  </div>\n                </div>\n              ) : (\n                <div className=\"info-display\">\n                  {Object.keys(venture).some(key => venture[key]) ? (\n                    <>\n                      <div className=\"info-group\">\n                        <label>Company Name:</label>\n                        <p>{venture.name || 'Not specified'}</p>\n                      </div>\n                      <div className=\"info-group\">\n                        <label>Industry:</label>\n                        <p>{venture.industry || 'Not specified'}</p>\n                      </div>\n                      <div className=\"info-group\">\n                        <label>Website:</label>\n                        <p>\n                          {venture.website ? (\n                            <a href={venture.website} target=\"_blank\" rel=\"noopener noreferrer\">\n                              {venture.website}\n                            </a>\n                          ) : 'Not specified'}\n                        </p>\n                      </div>\n                      <div className=\"info-group\">\n                        <label>Regions of Operation:</label>\n                        <p>{venture.regions || 'Not specified'}</p>\n                      </div>\n                      <div className=\"info-group\">\n                        <label>Description:</label>\n                        <p className=\"description\">{venture.description || 'No description available'}</p>\n                      </div>\n                    </>\n                  ) : (\n                    <div className=\"empty-state\">\n                      <p>No venture details available. Click 'Edit Details' to add information.</p>\n                    </div>\n                  )}\n                </div>\n              )}\n              \n              {/* Files and URLs associated with this venture */}\n              <div className=\"venture-files-section\">\n                <h3>Associated Files & URLs</h3>\n                <VentureFileManager ventureName={ventureName} />\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Competitors List Panel */}\n        {activePanel === 'competitors' && !activeCompetitor && (\n          <div className=\"panel competitors-panel\">\n            <div className=\"panel-header\">\n              <h2>Competitors</h2>\n              <button \n                className=\"action-button\"\n                onClick={() => setActivePanel('add-competitor')}\n              >\n                Add Competitor\n              </button>\n            </div>\n\n            <div className=\"panel-content\">\n              {competitors.length > 0 ? (\n                <div className=\"competitors-list\">\n                  {competitors.map((competitor, index) => (\n                    <button \n                      key={index} \n                      className=\"competitor-button\"\n                      onClick={() => selectCompetitor(competitor)}\n                    >\n                      {competitor.name}\n                    </button>\n                  ))}\n                </div>\n              ) : (\n                <div className=\"empty-state\">\n                  <p>No competitors added yet. Click 'Add Competitor' to get started.</p>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n\n        {/* Add Competitor Panel */}\n        {activePanel === 'add-competitor' && (\n          <div className=\"panel add-competitor-panel\">\n            <div className=\"panel-header\">\n              <h2>Add New Competitor</h2>\n              <button \n                className=\"action-button\"\n                onClick={() => setActivePanel('competitors')}\n              >\n                Back to Competitors\n              </button>\n            </div>\n\n            <div className=\"panel-content\">\n              <div className=\"edit-form\">\n                <div className=\"form-group\">\n                  <label>Company Name:</label>\n                  <input \n                    type=\"text\" \n                    name=\"name\" \n                    value={newCompetitor.name} \n                    onChange={handleCompetitorChange} \n                    placeholder=\"Company name\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Industry:</label>\n                  <input \n                    type=\"text\" \n                    name=\"industry\" \n                    value={newCompetitor.industry} \n                    onChange={handleCompetitorChange} \n                    placeholder=\"Industry\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Website:</label>\n                  <input \n                    type=\"text\" \n                    name=\"website\" \n                    value={newCompetitor.website} \n                    onChange={handleCompetitorChange} \n                    placeholder=\"Website URL\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Regions of Operation:</label>\n                  <input \n                    type=\"text\" \n                    name=\"regions\" \n                    value={newCompetitor.regions} \n                    onChange={handleCompetitorChange} \n                    placeholder=\"Regions (comma separated)\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Description:</label>\n                  <textarea \n                    name=\"description\" \n                    value={newCompetitor.description} \n                    onChange={handleCompetitorChange} \n                    placeholder=\"Describe this competitor\"\n                    rows={5}\n                  />\n                </div>\n                <button \n                  className=\"submit-button\"\n                  onClick={addNewCompetitor}\n                  disabled={!newCompetitor.name}\n                >\n                  Add Competitor\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Active Competitor Details Panel */}\n        {activePanel === 'competitor' && activeCompetitor && (\n          <div className=\"panel competitor-details-panel\">\n            <div className=\"panel-header\">\n              <h2>Competitor: {activeCompetitor.name}</h2>\n              <div className=\"panel-actions\">\n                <button \n                  className=\"action-button\"\n                  onClick={() => setActivePanel('competitors')}\n                >\n                  Back to List\n                </button>\n                <button \n                  className=\"action-button\"\n                  onClick={() => isEditingCompetitor ? saveCompetitorDetails() : setIsEditingCompetitor(true)}\n                >\n                  {isEditingCompetitor ? 'Save Details' : 'Edit Details'}\n                </button>\n                <button \n                  className=\"action-button\"\n                  onClick={() => setActivePanel('add-data-competitor')}\n                >\n                  Add Data\n                </button>\n              </div>\n            </div>\n\n            <div className=\"panel-content\">\n              {isEditingCompetitor ? (\n                <div className=\"edit-form\">\n                  <div className=\"form-group\">\n                    <label>Company Name:</label>\n                    <input \n                      type=\"text\" \n                      name=\"name\" \n                      value={activeCompetitor.name || ''} \n                      onChange={handleActiveCompetitorChange} \n                      placeholder=\"Company name\"\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label>Industry:</label>\n                    <input \n                      type=\"text\" \n                      name=\"industry\" \n                      value={activeCompetitor.industry || ''} \n                      onChange={handleActiveCompetitorChange} \n                      placeholder=\"Industry\"\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label>Website:</label>\n                    <input \n                      type=\"text\" \n                      name=\"website\" \n                      value={activeCompetitor.website || ''} \n                      onChange={handleActiveCompetitorChange} \n                      placeholder=\"Website URL\"\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label>Regions of Operation:</label>\n                    <input \n                      type=\"text\" \n                      name=\"regions\" \n                      value={activeCompetitor.regions || ''} \n                      onChange={handleActiveCompetitorChange} \n                      placeholder=\"Regions (comma separated)\"\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label>Description:</label>\n                    <textarea \n                      name=\"description\" \n                      value={activeCompetitor.description || ''} \n                      onChange={handleActiveCompetitorChange} \n                      placeholder=\"Describe this competitor\"\n                      rows={5}\n                    />\n                  </div>\n                </div>\n              ) : (\n                <div className=\"info-display\">\n                  <div className=\"info-group\">\n                    <label>Company Name:</label>\n                    <p>{activeCompetitor.name || 'Not specified'}</p>\n                  </div>\n                  <div className=\"info-group\">\n                    <label>Industry:</label>\n                    <p>{activeCompetitor.industry || 'Not specified'}</p>\n                  </div>\n                  <div className=\"info-group\">\n                    <label>Website:</label>\n                    <p>\n                      {activeCompetitor.website ? (\n                        <a href={activeCompetitor.website} target=\"_blank\" rel=\"noopener noreferrer\">\n                          {activeCompetitor.website}\n                        </a>\n                      ) : 'Not specified'}\n                    </p>\n                  </div>\n                  <div className=\"info-group\">\n                    <label>Regions of Operation:</label>\n                    <p>{activeCompetitor.regions || 'Not specified'}</p>\n                  </div>\n                  <div className=\"info-group\">\n                    <label>Description:</label>\n                    <p className=\"description\">{activeCompetitor.description || 'No description available'}</p>\n                  </div>\n                </div>\n              )}\n              \n              {/* Files and URLs associated with this competitor */}\n              <div className=\"competitor-files-section\">\n                <h3>Associated Files & URLs</h3>\n                <VentureFileManager \n                  ventureName={ventureName} \n                  competitorId={activeCompetitor.id} \n                />\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Add Data Panel for Venture */}\n        {activePanel === 'add-data' && (\n          <div className=\"panel add-data-panel\">\n            <div className=\"panel-header\">\n              <h2>Add Data for {ventureName}</h2>\n              <button \n                className=\"action-button\"\n                onClick={() => setActivePanel('venture')}\n              >\n                Back to Venture Details\n              </button>\n            </div>\n\n            <div className=\"panel-content\">\n              <VentureFileManager \n                ventureName={ventureName} \n                fullWidth={true}\n              />\n            </div>\n          </div>\n        )}\n\n        {/* Add Data Panel for Competitor */}\n        {activePanel === 'add-data-competitor' && activeCompetitor && (\n          <div className=\"panel add-data-panel\">\n            <div className=\"panel-header\">\n              <h2>Add Data for {activeCompetitor.name}</h2>\n              <button \n                className=\"action-button\"\n                onClick={() => setActivePanel('competitor')}\n              >\n                Back to Competitor Details\n              </button>\n            </div>\n\n            <div className=\"panel-content\">\n              <VentureFileManager \n                ventureName={ventureName} \n                competitorId={activeCompetitor.id}\n                fullWidth={true}\n              />\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default VenturePage;\n","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport AuthForm from './components/AuthForm';\nimport VenturesPage from './pages/VenturesPage';\nimport InsightsPage from './pages/InsightsPage';\nimport HomePage from './pages/HomePage'; // Import HomePage component\nimport { AuthProvider, useAuth } from './context/AuthContext';\nimport './styles/main.css';\nimport VenturePage from './pages/VenturePage'; // Added import for VenturePage\n\nfunction PrivateRoute({ children }) {\n  const { user } = useAuth();\n  return user ? children : <Navigate to=\"/\" />;\n}\n\nfunction AppContent() {\n  const { user, login, signup } = useAuth();\n  const [isLogin, setIsLogin] = React.useState(true);\n\n  return (\n    <div className=\"app-container\">\n      {user && <Navbar />}\n      <div className=\"main-content\">\n        <Routes>\n          <Route path=\"/ventures\" element={\n            <PrivateRoute>\n              <VenturesPage />\n            </PrivateRoute>\n          } />\n          <Route path=\"/ventures/:ventureName\" element={ // Updated path\n            <PrivateRoute>\n              <VenturePage />\n            </PrivateRoute>\n          } />\n          <Route path=\"/insights\" element={\n            <PrivateRoute>\n              <InsightsPage />\n            </PrivateRoute>\n          } />\n          <Route path=\"/\" element={\n            user ? <Navigate to=\"/ventures\" /> : <HomePage />\n          } />\n          <Route path=\"/login\" element={\n            user ? <Navigate to=\"/ventures\" /> : (\n              <div className=\"auth-container\">\n                <h1>{isLogin ? 'Sign In' : 'Sign Up'}</h1>\n                <AuthForm onSubmit={isLogin ? login : signup} isLogin={isLogin} />\n                <button \n                  className=\"switch-auth\" \n                  onClick={() => setIsLogin(!isLogin)}\n                >\n                  {isLogin ? 'Need an account? Sign up' : 'Have an account? Sign in'}\n                </button>\n              </div>\n            )\n          } />\n        </Routes>\n      </div>\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <Router>\n        <AppContent />\n      </Router>\n    </AuthProvider>\n  );\n}\n\nexport default App;","\nimport React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport App from './App';\nimport '../src/styles/main.css';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container);\n\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}